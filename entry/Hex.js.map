{"version":3,"sources":["Hex.js.input.js"],"names":["tt","arrayToColor","arr","'rgb('","0","','","1","2","')'","Hex","'./Block.js'","'../settings.js'","'../comon.js'","'./music.js'","console","log","'hex.js 导入的 settings:'","settings","blockHeight","wx","constructor","sideLength","this","playThrough","fillColor","44","62","80","tempColor","angularVelocity","position","dy","dt","sides","6","angle","180","targetAngle","shakes","strokeColor","'blue'","x","globalData","trueCanvas","width","y","height","ct","lastCombo","comboTime","lastColorScored","\"#000\"","comboMultiplier","texts","lastRotate","Date","now","blocks","delay","shake","obj","dx","30","60","lane","Math","PI","cos","magnitude","sin","gdx","gdy","0.5","i","length","splice","addBlock","block","gameState","settled","tint","0.6","fallingLane","push","4.5","currentPixelRatio","distFromHex","sqrt","3","attachedLane","checked","doesBlockCollide","tArr","iter","scale","1.5","waveone","difficulty","15","rotate","steps","forEach","audioManager","move","draw","fontSize","score","textWidth","ctx","maxWidth","angularVelocityConst","abs","drawPolygon","'rgba(0,0,0,0)'","save","toString","1.2","36","font","measureText","fillStyle","'#FFA500'","textAlign","'center'","textBaseline","'middle'","strokeStyle","'#000000'","lineWidth","max","strokeText","fillText","restore"],"mappings":"6nQAMMA,OAuQGC,aAAAA,sBAAaC,UACdC,GAASD,EAAIE,GAAIC,GAAIH,EAAII,GAAGD,GAAIH,EAAIK,IAAGC,QAtQzCC,sBARYC,kCACMC,yCACIC,uCACCC,8BACRD,cACrBE,QAAQC,IAAIC,GAAwBC,SAASA,SAASC,KAChDlB,GAAKmB,GAELV,UAAAA,IACLW,YAAYC,GACXC,KAAKC,IAAcnB,EAEnBkB,KAAKE,KAAaC,GAAGC,GAAGC,IAExBL,KAAKM,KAAaH,GAAGC,GAAGC,IAExBL,KAAKO,IAAkBzB,EAEvBkB,KAAKQ,IAAW1B,EAEhBkB,KAAKS,IAAK3B,EAEVkB,KAAKU,IAAK1B,EAEVgB,KAAKW,IAAQC,GAEbZ,KAAKa,IAAQC,KAAMd,KAAKW,IAExBX,KAAKe,IAAcf,KAAKa,IAExBb,KAAKgB,OAELhB,KAAKD,IAAaA,EAElBC,KAAKiB,IAAcC,GAEnBlB,KAAKmB,IAAItB,GAAGuB,IAAWC,IAAWC,KAAQrC,GAE1Ce,KAAKuB,IAAI1B,GAAGuB,IAAWC,IAAWG,KAASvC,GAE3Ce,KAAKyB,IAAK3C,EAEVkB,KAAK0B,IAAY1B,KAAKyB,IAAK9B,SAASgC,IAEpC3B,KAAK4B,IAAkBC,GAEvB7B,KAAK8B,IAAkB9C,EAKvBgB,KAAK+B,OAEL/B,KAAKgC,IAAaC,KAAKC,MAKvBlC,KAAKmC,wBACLnC,KAAKoC,IAAQpD,qHAnDTG,QAqDLkD,SAAMC,OAEDzB,EAMAJ,EAFA8B,EAJA1B,EAAQ2B,GAAgBC,GAAXH,EAAII,IAIjBH,GAFJ1B,GAAS8B,KAAKC,KAAK9B,GAEV6B,KAAKE,IAAIhC,GAASyB,EAAIQ,KAE3BrC,EAAKkC,KAAKI,IAAIlC,GAASyB,EAAIQ,OAE/BjD,GAAGuB,IAAW4B,KAAOT,EAErB1C,GAAGuB,IAAW6B,KAAOxC,EAErB6B,EAAIQ,KAAa7D,IAAKe,KAAKU,IAAKwC,KAE5BZ,EAAIQ,IAAY9D,UAEVmE,EAAIrE,EAAGqE,EAAInD,KAAKgB,IAAOoC,IAAQD,IAEnCnD,KAAKgB,IAAOmC,IAAMb,GAErBtC,KAAKgB,IAAOqC,IAAOF,EAAGnE,gDA3ErBG,QAmFLmE,4BAASC,OAWJb,EAR6B1D,GAA3Ba,GAAGuB,IAAWoC,MAGpBD,EAAME,IAAUzE,EAEhBuE,EAAMG,IAAOC,IAGTjB,EAAO1C,KAAKW,IAAQ4C,EAAMK,IAE9B5D,KAAKgB,IAAO6C,UAAYN,EAAMK,SAAwBE,KAAOjE,GAAGuB,IAAW2C,KAAsD/E,GAAMW,eAGvI+C,IADAA,GAAQ1C,KAAKQ,KACER,KAAKW,KAASX,KAAKW,IAGlC4C,EAAMS,IAAchE,KAAKD,KAAad,GAAI0D,KAAKsB,IAAKC,IAAKX,EAAM/B,IAASxB,KAAKmC,IAAOO,GAAMU,IAE1FpD,KAAKmC,IAAOO,GAAMmB,IAAKN,GAGvBA,EAAMY,IAAezB,EAErBa,EAAMa,IAAUpF,0EA7GZG,QA+GLkF,SAAiBd,EAAO/C,EAAU8D,OAmC5B5B,EAGA9D,EApCD2E,EAAME,eAKNjD,GACH5B,EAAM0F,EAEF9D,GAAY1B,EAEXyE,EAAMS,IAAcT,EAAMgB,IAAOvE,KAAKU,IAAKf,SAAS6E,IAASxE,KAAKD,KAAad,GAAK0D,KAAKsB,IAAKC,KAAMpF,GAEvGyE,EAAMS,IAAehE,KAAKD,KAAad,GAAK0D,KAAKsB,IAAKC,IACtDX,EAAME,IAAUzE,EAChBuE,EAAMa,IAAUpF,IAEhBuE,EAAME,IAAU3E,EAChByE,EAAMgB,IAAOE,IAAO5E,GAAGuB,IAAWsD,IAAQC,KAAaC,GAAMV,IAI1DtF,EAAI4B,EAAWxB,GAAGyE,KAAWF,EAAMS,IAAcT,EAAMgB,IAAOvE,KAAKU,IAAKf,SAAS6E,IAAQ5F,EAAI4B,EAAWxB,GAAGgF,IAAcpF,EAAI4B,EAAWxB,GAAGwC,KAAU1C,GAExJyE,EAAMS,IAAcpF,EAAI4B,EAAWxB,GAAGgF,IAAcpF,EAAI4B,EAAWxB,GAAGwC,IACtE+B,EAAME,IAAUzE,EAChBuE,EAAMa,IAAUpF,IAEhBuE,EAAME,IAAU3E,EAChByE,EAAMgB,IAAOE,IAAO5E,GAAGuB,IAAWsD,IAAQC,KAAaC,GAAMV,MAK3DxB,EAAO1C,KAAKW,IAAQ4C,EAAMK,IAE9BlB,IADAA,GAAQ1C,KAAKQ,KACER,KAAKW,KAASX,KAAKW,IAIjB7B,GAHbF,EAAMoB,KAAKmC,IAAOO,IAGdU,IAEHG,EAAMS,IAAcT,EAAMgB,IAAOvE,KAAKU,IAAKf,SAAS6E,IAAQ5F,EAAIA,EAAIwE,IAASpE,GAAGgF,IAAcpF,EAAIA,EAAIwE,IAASpE,GAAGwC,KAAU1C,IAE/HyE,EAAMS,IAAcpF,EAAIA,EAAIwE,IAASpE,GAAGgF,IAAcpF,EAAIA,EAAIwE,IAASpE,GAAGwC,IAC1ExB,KAAKsD,IAASC,IAIXA,EAAMS,IAAcT,EAAMgB,IAAOvE,KAAKU,IAAKf,SAAS6E,IAASxE,KAAKD,KAAad,GAAK0D,KAAKsB,IAAKC,KAAMpF,IAEvGyE,EAAMS,IAAehE,KAAKD,KAAad,GAAK0D,KAAKsB,IAAKC,IACtDlE,KAAKsD,IAASC,mDApKbpE,QAyKL0F,SAAOC,MAI4B9F,IAA5Ba,GAAGuB,IAAWoC,SACpBxD,KAAKQ,KAAYsE,EAGV9E,KAAKQ,IAAW1B,GACtBkB,KAAKQ,KAAYI,GAGlBZ,KAAKQ,IAAWR,KAAKQ,IAAWR,KAAKW,IACrCX,KAAKmC,IAAO4C,aAAiB5C,GAC5BA,EAAO4C,aAAiBxB,GACvBA,EAAMxC,IAAcwC,EAAMxC,IAAsB0B,GAARqC,MAI1C9E,KAAKe,IAAcf,KAAKe,IAAsB0B,GAARqC,EACtC9E,KAAKgC,IAAaC,KAAKC,MACvB8C,aAAaC,oDA9LT9F,QAiML+F,eAoCOC,MAFEC,EAwBA7D,EAlBF8D,EAVEC,EAKAC,EAsBApE,EAxDRnB,KAAKmB,IAAItB,GAAGuB,IAAWC,IAAWC,KAAMrC,IAERA,IAA5BY,GAAGuB,IAAWoC,MACjBxD,KAAKuB,IAAI1B,GAAGuB,IAAWC,IAAWG,KAAOvC,IAG1CY,GAAGuB,IAAW4B,IAAMlE,UAEXqE,EADTtD,GAAGuB,IAAW6B,IAAMnE,EACJqE,EAAInD,KAAKgB,IAAOoC,IAAQD,IACvCnD,KAAKqC,IAAMrC,KAAKgB,IAAOmC,IAEpBnD,KAAKa,IAAQb,KAAKe,IACrBf,KAAKO,KAAmBV,GAAGuB,IAAWoE,IAAuBxF,KAAKU,IAE3DV,KAAKa,IAAQb,KAAKe,MACzBf,KAAKO,KAAmBV,GAAGuB,IAAWoE,IAAuBxF,KAAKU,KAG/DiC,KAAK8C,IAAIzF,KAAKa,IAAQb,KAAKe,IAAcf,KAAKO,MAAoBoC,KAAK8C,IAAIzF,KAAKO,MACnFP,KAAKa,IAAQb,KAAKe,IAClBf,KAAKO,IAAkBzB,GAGvBkB,KAAKa,KAASb,KAAKO,IAGpBmF,YAAY7F,GAAGuB,IAAWkE,IAAItF,KAAKmB,IAAItB,GAAGuB,IAAW4B,IAAKhD,KAAKuB,IAAI1B,GAAGuB,IAAW6B,IAAMjD,KAAKS,IAAIT,KAAKW,IAAOX,KAAKD,IAAYC,KAAKa,IAAMlC,aAAaqB,KAAKE,KAAapB,EAAG6G,IAGlKL,EAAMzF,GAAGuB,IAAWkE,IAIpBF,GAHNE,EAAIM,MAGU/F,GAAGuB,IAAWgE,IAAMS,OAC5BN,EAA6BO,IAAlB9F,KAAKD,IAClBoF,EAAWY,GAAKpG,SAAS6E,IAG7Bc,EAAIU,YAAeb,YACfE,EAAYC,EAAIW,IAAYb,GAAO9D,IAiBjCH,GAdUoE,EAAZF,IACHF,GAAuBI,IAAWF,GAInCC,EAAIY,IAAYC,GAChBb,EAAIc,IAAYC,GAChBf,EAAIgB,IAAeC,GAGnBjB,EAAIkB,IAAcC,GAClBnB,EAAIoB,IAAY/D,KAAKgE,IAAI1H,GAAGkG,IAAWP,IAG7B5E,KAAKmB,IAAItB,GAAGuB,IAAW4B,KAC3BzB,EAAIvB,KAAKuB,IAAI1B,GAAGuB,IAAW6B,IAAMjD,KAAKS,IAG5C6E,EAAIsB,IAAWxB,EAAOjE,EAAGI,GAEzB+D,EAAIuB,IAASzB,EAAOjE,EAAGI,GAEvB+D,EAAIwB,6CAlQF3H,sBAwQSA","file":"Hex.js","sourcesContent":["import Block from './Block.js';\r\nimport { settings} from '../settings.js';\r\nimport { drawPolygon } from '../comon.js';\r\nimport { audioManager } from './music.js';\r\nimport { Text } from '../comon.js';\r\nconsole.log('hex.js 导入的 settings:', settings,settings.blockHeight);\r\nconst tt = wx\r\n// 主六边形类\r\nclass Hex {\r\n\tconstructor(sideLength) {\r\n\t\tthis.playThrough = 0;\r\n\t\t// 填充颜色\r\n\t\tthis.fillColor = [44,62,80];\r\n\t\t// 临时颜色\r\n\t\tthis.tempColor = [44,62,80];\r\n\t\t// 角速度\r\n\t\tthis.angularVelocity = 0;\r\n\t\t// 旋转的次数\r\n\t\tthis.position = 0;\r\n\t\t// 垂直位移\r\n\t\tthis.dy = 0;\r\n\t\t// 时间增量\r\n\t\tthis.dt = 1;\r\n\t\t// 六边形的边数\r\n\t\tthis.sides = 6;\r\n\t\t// 每个角的角度\r\n\t\tthis.angle = 180 / this.sides;\r\n\t\t// 目标角度\r\n\t\tthis.targetAngle = this.angle;\r\n\t\t// 存储震动效果的数组\r\n\t\tthis.shakes = [];\r\n\t\t// 六边形的边长\r\n\t\tthis.sideLength = sideLength;\r\n\t\t// 描边颜色\r\n\t\tthis.strokeColor = 'blue';\r\n\t\t// 六边形的中心x坐标\r\n\t\tthis.x = wx.globalData.trueCanvas.width / 2;\r\n\t\t// 六边形的中心y坐标\r\n\t\tthis.y = wx.globalData.trueCanvas.height / 2;\r\n\t\t// 当前时间\r\n\t\tthis.ct = 0;\r\n\t\t// 上次连击的时间\r\n\t\tthis.lastCombo = this.ct - settings.comboTime;\r\n\t\t// 上次得分的颜色\r\n\t\tthis.lastColorScored = \"#000\";\r\n\t\t// 连击时间\r\n\t\tthis.comboMultiplier = 1;\r\n\t\t// 存储文本对象的数组\r\n\t\t/**\r\n\t\t * @type {Array<Text>} - 这是一个数组类型的变量\r\n\t\t */\r\n\t\tthis.texts = [];\r\n\t\t// 上次旋转的时间\r\n\t\tthis.lastRotate = Date.now();\r\n\t\t/**\r\n\t\t * @type {Array<Array<Block>>} - 这是一个数组类型的变量\r\n\t\t */\r\n\t\t// 存储每个边上的块\r\n\t\tthis.blocks = [[],[],[],[],[],[]];\r\n\t\tthis.delay = 1;\r\n\t}\r\n\tshake(obj) { //lane as in particle lane\r\n\t\t// 计算震动的角度\r\n\t\tvar angle = 30 + obj.lane * 60;\r\n\t\t// 将角度转换为弧度\r\n\t\tangle *= Math.PI / 180;\r\n\t\t// 计算震动的水平位移\r\n\t\tvar dx = Math.cos(angle) * obj.magnitude;\r\n\t\t// 计算震动的垂直位移\r\n\t\tvar dy = Math.sin(angle) * obj.magnitude;\r\n\t\t// 更新全局水平位移\r\n\t\twx.globalData.gdx -= dx;\r\n\t\t// 更新全局垂直位移\r\n\t\twx.globalData.gdy += dy;\r\n\t\t// 减少震动的幅度\r\n\t\tobj.magnitude /= 2 * (this.dt + 0.5);\r\n\t\t// 如果震动幅度小于1\r\n\t\tif (obj.magnitude < 1) {\r\n\t\t\t// 遍历震动数组\r\n\t\t\tfor (var i = 0; i < this.shakes.length; i++) {\r\n\t\t\t\t// 如果找到了当前震动对象\r\n\t\t\t\tif (this.shakes[i] == obj) {\r\n\t\t\t\t\t// 从震动数组中移除当前震动对象\r\n\t\t\t\t\tthis.shakes.splice(i, 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\t/**\r\n\t * @param {Block} block \r\n\t */\r\n\taddBlock(block) {\r\n\t\t//audioManager.fall();\r\n       // 如果游戏状态不是进行中或暂停，直接返回\r\n\t\tif (!(wx.globalData.gameState == 1)) return;\r\n\t\r\n\t\t// 将block标记为已安置\r\n\t\tblock.settled = 1;\r\n\t\t// 设置block的颜色透明度\r\n\t\tblock.tint = 0.6;\r\n\t\r\n\t\t// 计算block所在的lane\r\n\t\tvar lane = this.sides - block.fallingLane;\r\n\t\t// 添加震动效果\r\n\t\tthis.shakes.push({lane: block.fallingLane, magnitude: 4.5 * (wx.globalData.currentPixelRatio ? wx.globalData.currentPixelRatio : 1) * (settings.scale)});\r\n\t\t// 根据主六边形的旋转位置调整lane\r\n\t\tlane += this.position;\r\n\t\tlane = (lane + this.sides) % this.sides;\r\n\t\r\n\t\t// 计算block距离主六边形中心的距离\r\n\t\tblock.distFromHex = this.sideLength / 2 * Math.sqrt(3) + block.height * this.blocks[lane].length;\r\n\t\t// 将block添加到对应的lane中\r\n\t\tthis.blocks[lane].push(block);\r\n\t\r\n\t\t// 设置block的附加lane\r\n\t\tblock.attachedLane = lane;\r\n\t\t// 标记block为已检查\r\n\t\tblock.checked = 1;\r\n    };\r\n\tdoesBlockCollide(block, position, tArr) {\r\n\t\t// 如果block已经安置，直接返回\r\n\t\tif (block.settled) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// 如果提供了position参数\r\n\t\tif (position !== undefined) {\r\n\t\t\tarr = tArr;\r\n\t\t\t// 如果position小于等于0\r\n\t\t\tif (position <= 0) {\r\n\t\t\t\t// 检查block是否与主六边形的边缘碰撞\r\n\t\t\t\tif (block.distFromHex - block.iter * this.dt * settings.scale - (this.sideLength / 2) * Math.sqrt(3) <= 0) {\r\n\t\t\t\t\t// 将block的位置设置为主六边形的边缘\r\n\t\t\t\t\tblock.distFromHex = (this.sideLength / 2) * Math.sqrt(3);\r\n\t\t\t\t\tblock.settled = 1;\r\n\t\t\t\t\tblock.checked = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tblock.settled = 0;\r\n\t\t\t\t\tblock.iter = 1.5 + (wx.globalData.waveone.difficulty / 15) * 3;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// 检查block是否与前一个block碰撞\r\n\t\t\t\tif (arr[position - 1].settled && block.distFromHex - block.iter * this.dt * settings.scale - arr[position - 1].distFromHex - arr[position - 1].height <= 0) {\r\n\t\t\t\t\t// 将block的位置设置为前一个block的顶部\r\n\t\t\t\t\tblock.distFromHex = arr[position - 1].distFromHex + arr[position - 1].height;\r\n\t\t\t\t\tblock.settled = 1;\r\n\t\t\t\t\tblock.checked = 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tblock.settled = 0;\r\n\t\t\t\t\tblock.iter = 1.5 + (wx.globalData.waveone.difficulty / 15) * 3;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// 计算block所在的lane\r\n\t\t\tvar lane = this.sides - block.fallingLane;\r\n\t\t\tlane += this.position;\r\n\t\t\tlane = (lane + this.sides) % this.sides;\r\n\t\t\tvar arr = this.blocks[lane];\r\n\t\t\t//console.log(block,lane,arr);\r\n\t\t\t// 如果当前lane中有blocks\r\n\t\t\tif (arr.length > 0) {\r\n\t\t\t\t// 检查block是否与当前lane中的最后一个block碰撞\r\n\t\t\t\tif (block.distFromHex + block.iter * this.dt * settings.scale - arr[arr.length - 1].distFromHex - arr[arr.length - 1].height <= 0) {\r\n\t\t\t\t\t// 将block的位置设置为当前lane中最后一个block的顶部\r\n\t\t\t\t\tblock.distFromHex = arr[arr.length - 1].distFromHex + arr[arr.length - 1].height;\r\n\t\t\t\t\tthis.addBlock(block);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// 检查block是否与主六边形的边缘碰撞\r\n\t\t\t\tif (block.distFromHex + block.iter * this.dt * settings.scale - (this.sideLength / 2) * Math.sqrt(3) <= 0) {\r\n\t\t\t\t\t// 将block的位置设置为主六边形的边缘\r\n\t\t\t\t\tblock.distFromHex = (this.sideLength / 2) * Math.sqrt(3);\r\n\t\t\t\t\tthis.addBlock(block);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\trotate(steps) {\r\n\t\t\r\n\t\t//console.log(\"rotate\",steps);\r\n\t\t//if(Date.now()-this.lastRotate<75 && !(/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) ) return;\r\n\t\tif (!(wx.globalData.gameState === 1)) return;\r\n\t\tthis.position += steps;\r\n\t\t\r\n\r\n\t\twhile (this.position < 0) {\r\n\t\t\tthis.position += 6;\r\n\t\t}\r\n\r\n\t\tthis.position = this.position % this.sides;\r\n\t\tthis.blocks.forEach(function(blocks) {\r\n\t\t\tblocks.forEach(function(block) {\r\n\t\t\t\tblock.targetAngle = block.targetAngle - steps * 60;\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.targetAngle = this.targetAngle - steps * 60;\r\n\t\tthis.lastRotate = Date.now();\r\n\t\taudioManager.move();\r\n\t};\r\n\r\n\tdraw() {\r\n\t\tthis.x = wx.globalData.trueCanvas.width/2;\r\n\r\n\t\tif (wx.globalData.gameState != -2) {\r\n\t\t\tthis.y = wx.globalData.trueCanvas.height/2;\r\n\t\t}\r\n\t\t//this.sideLength = settings.hexWidth;\r\n\t\twx.globalData.gdx = 0;\r\n\t\twx.globalData.gdy = 0;\r\n\t\tfor (var i = 0; i < this.shakes.length; i++) {\r\n\t\t\tthis.shake(this.shakes[i]);\r\n\t\t}\r\n\t\tif (this.angle > this.targetAngle) {\r\n\t\t\tthis.angularVelocity -= wx.globalData.angularVelocityConst * this.dt;\r\n\t\t}\r\n\t\telse if(this.angle < this.targetAngle) {\r\n\t\t\tthis.angularVelocity += wx.globalData.angularVelocityConst * this.dt;\r\n\t\t}\r\n\r\n\t\tif (Math.abs(this.angle - this.targetAngle + this.angularVelocity) <= Math.abs(this.angularVelocity)) { //do better soon\r\n\t\t\tthis.angle = this.targetAngle;\r\n\t\t\tthis.angularVelocity = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.angle += this.angularVelocity;\r\n\t\t}\r\n\t\t//console.log(\"draw hex\",this.sideLength,settings.baseHexWidth);\r\n\t\tdrawPolygon(wx.globalData.ctx,this.x + wx.globalData.gdx, this.y + wx.globalData.gdy + this.dy, this.sides, this.sideLength, this.angle,arrayToColor(this.fillColor) , 0, 'rgba(0,0,0,0)');\r\n\t\r\n\t\t  // 添加分数显示\r\n\t\t  const ctx = wx.globalData.ctx;\r\n\t\t  ctx.save();\r\n\t\t  \r\n\t\t  // 计算合适的字体大小\r\n\t\t  const score = wx.globalData.score.toString();\r\n\t\t  const maxWidth = this.sideLength * 1.2;  // 六边形宽度的 60%\r\n\t\t  let fontSize = 36 * settings.scale;\r\n\t\t  \r\n\t\t  // 设置初始字体来测量文本宽度\r\n\t\t  ctx.font = `bold ${fontSize}px Arial`;\r\n\t\t  let textWidth = ctx.measureText(score).width;\r\n\t\t  \r\n\t\t  // 如果文本太宽，调整字体大小\r\n\t\t  if (textWidth > maxWidth) {\r\n\t\t\t  fontSize = fontSize * (maxWidth / textWidth);\r\n\t\t  }\r\n\t\t  \r\n\t\t  // 应用最终的文本样式\r\n\t\t  ctx.fillStyle = '#FFA500';  // 橙色\r\n\t\t  ctx.textAlign = 'center';\r\n\t\t  ctx.textBaseline = 'middle';\r\n\t\t  \r\n\t\t  // 添加描边使文字更清晰\r\n\t\t  ctx.strokeStyle = '#000000';\r\n\t\t  ctx.lineWidth = Math.max(2, fontSize / 15);  // 描边宽度随字体大小调整\r\n\t\t  \r\n\t\t  // 在六边形中心绘制分数\r\n\t\t  const x = this.x + wx.globalData.gdx;\r\n\t\t  const y = this.y + wx.globalData.gdy + this.dy;\r\n\t\t  \r\n\t\t  // 先绘制描边\r\n\t\t  ctx.strokeText(score, x, y);\r\n\t\t  // 再绘制文字\r\n\t\t  ctx.fillText(score, x, y);\r\n\t\t  \r\n\t\t  ctx.restore();\r\n\t};\r\n}\r\nfunction arrayToColor(arr){\r\n\treturn 'rgb(' + arr[0]+ ','+arr[1]+','+arr[2]+')';\r\n}\r\nexport default Hex;"]}