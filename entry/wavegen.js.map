{"version":3,"sources":["wavegen.js.input.js"],"names":["addNewBlock","blockDestroyed","1350","waveone","nextGen","30","settings","creationSpeedModifier","600","8","difficulty","35","0.085","speedModifier","MainHex","blocklane","color","iter","distFromHex","settled","wx","globalData","blocks","push","Block","blockGen","'../settings.js'","'../comon.js'","'./Block.js'","constructor","hex","this","lastGen","0","last","2700","start","colors","ct","1","dt","update","currentFunction","14","computeDifficulty","1300","11","randomGeneration","fv","nextPattern","randInt","sides","length","1.6","15","3","5","doubleGeneration","10","crosswiseGeneration","7","spiralGeneration","4","circleGeneration","halfCircleGeneration","increment","500","colorList","numColors","nextLoop","i","j","q","1.5","shouldChangePattern","ri","0.6","2","dir","setRandom","c","d","6","x"],"mappings":"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","file":"wavegen.js","sourcesContent":["// 波形生成器 用于砖块的生成\r\nimport { settings} from '../settings.js';\r\nimport { randInt,rotatePoint } from '../comon.js';\r\nimport Block from './Block.js';\r\n\r\nfunction blockDestroyed() {\r\n\tif (waveone.nextGen > 1350) {\r\n\t\twaveone.nextGen -= 30 * settings.creationSpeedModifier;\r\n\t} else if (waveone.nextGen > 600) {\r\n\t\twaveone.nextGen -= 8 * settings.creationSpeedModifier;\r\n\t} else {\r\n\t\twaveone.nextGen = 600;\r\n\t}\r\n\r\n\tif (waveone.difficulty < 35) {\r\n\t\twaveone.difficulty += 0.085 * settings.speedModifier;\r\n\t} else {\r\n\t\twaveone.difficulty = 35;\r\n\t}\r\n}\r\n\r\nclass blockGen {\r\n\tconstructor(hex) {\r\n\t\tthis.lastGen = 0;\r\n\t\tthis.last = 0;\r\n\t\tthis.nextGen = 2700;\r\n\t\tthis.start = 0;\r\n\t\tthis.colors = settings.colors;\r\n\t\tthis.ct = 0;\r\n\t\tthis.hex = hex;\r\n\t\tthis.difficulty = 1;\r\n\t\tthis.dt = 0;\r\n\t\tthis.update = function() {\r\n\t\t\t//console.log(\"waveGen update\");\r\n\t\t\tthis.currentFunction();\r\n\t\t\tthis.dt =  14  * this.hex.ct;\r\n\t\t\tthis.computeDifficulty();\r\n\t\t\tif ((this.dt - this.lastGen) * settings.creationSpeedModifier > this.nextGen) {\r\n\t\t\t\tif (this.nextGen > 600) {\r\n\t\t\t\t\tthis.nextGen -= 11 * ((this.nextGen / 1300)) * settings.creationSpeedModifier;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trandomGeneration() {\r\n\t\tif (this.dt - this.lastGen > this.nextGen) {\r\n\t\t\tthis.ct++;\r\n\t\t\tthis.lastGen = this.dt;\r\n\t\t\tvar fv = randInt(0, this.hex.sides);\r\n\t\t\taddNewBlock(this.hex,fv, this.colors[randInt(0, settings.colors.length)], 1.6 + (this.difficulty / 15) * 3);\r\n\t\t\tvar lim = 5;\r\n\t\t\tif (this.ct > lim) {\r\n\t\t\t\tvar nextPattern = randInt(0, 3 + 21);\r\n\t\t\t\tif (nextPattern > 15) {\r\n\t\t\t\t\tthis.ct = 0;\r\n\t\t\t\t\tthis.currentFunction = this.doubleGeneration;\r\n\t\t\t\t} else if (nextPattern > 10) {\r\n\t\t\t\t\tthis.ct = 0;\r\n\t\t\t\t\tthis.currentFunction = this.crosswiseGeneration;\r\n\t\t\t\t} else if (nextPattern > 7) {\r\n\t\t\t\t\tthis.ct = 0;\r\n\t\t\t\t\tthis.currentFunction = this.spiralGeneration;\r\n\t\t\t\t} else if (nextPattern > 4) {\r\n\t\t\t\t\tthis.ct = 0;\r\n\t\t\t\t\tthis.currentFunction = this.circleGeneration;\r\n\t\t\t\t} else if (nextPattern > 1) {\r\n\t\t\t\t\tthis.ct = 0;\r\n\t\t\t\t\tthis.currentFunction = this.halfCircleGeneration;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tcomputeDifficulty() {\r\n\t\tif (this.difficulty < 35) {\r\n\t\t\tvar increment;\r\n\t\t\tif (this.difficulty < 8) {\r\n\t\t\t\t increment = (this.dt - this.last) / (5166667) * settings.speedModifier;\r\n\t\t\t} else if (this.difficulty < 15) {\r\n\t\t\t\tincrement = (this.dt - this.last) / (72333333) * settings.speedModifier;\r\n\t\t\t} else {\r\n\t\t\t\tincrement = (this.dt - this.last) / (90000000) * settings.speedModifier;\r\n\t\t\t}\r\n\r\n\t\t\tthis.difficulty += increment * (1/2);\r\n\t\t}\r\n\t};\r\n\r\n\tcircleGeneration() {\r\n\t\tif (this.dt - this.lastGen > this.nextGen + 500) {\r\n\t\t\tvar numColors = randInt(1, 4);\r\n\t\t\tif (numColors == 3) {\r\n\t\t\t\tnumColors = randInt(1, 4);\r\n\t\t\t}\r\n\r\n\t\t\tvar colorList = [];\r\n\t\t\tnextLoop: for (var i = 0; i < numColors; i++) {\r\n\t\t\t\tvar q = randInt(0, settings.colors.length);\r\n\t\t\t\tfor (var j in colorList) {\r\n\t\t\t\t\tif (colorList[j] == settings.colors[q]) {\r\n\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\tcontinue nextLoop;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcolorList.push(settings.colors[q]);\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i = 0; i < this.hex.sides; i++) {\r\n\t\t\t\taddNewBlock(this.hex,i, colorList[i % numColors], 1.5 + (this.difficulty / 15) * 3);\r\n\t\t\t}\r\n\r\n\t\t\tthis.ct += 15;\r\n\t\t\tthis.lastGen = this.dt;\r\n\t\t\tthis.shouldChangePattern(1);\r\n\t\t}\r\n\t};\r\n\r\n\thalfCircleGeneration() {\r\n\t\tif (this.dt - this.lastGen > (this.nextGen + 500) / 2) {\r\n\t\t\tvar numColors = randInt(1, 3);\r\n\t\t\tvar c = settings.colors[randInt(0, settings.colors.length)];\r\n\t\t\tvar colorList = [c, c, c];\r\n\t\t\tif (numColors == 2) {\r\n\t\t\t\tcolorList = [c, settings.colors[randInt(0, settings.colors.length)], c];\r\n\t\t\t}\r\n\r\n\t\t\tvar d = randInt(0, 6);\r\n\t\t\tfor (var i = 0; i < 3; i++) {\r\n\t\t\t\taddNewBlock(this.hex,(d + i) % 6, colorList[i], 1.5 + (this.difficulty / 15) * 3);\r\n\t\t\t}\r\n\r\n\t\t\tthis.ct += 8;\r\n\t\t\tthis.lastGen = this.dt;\r\n\t\t\tthis.shouldChangePattern();\r\n\t\t}\r\n\t};\r\n\r\n\tcrosswiseGeneration() {\r\n\t\tif (this.dt - this.lastGen > this.nextGen) {\r\n\t\t\tvar ri = randInt(0, settings.colors.length);\r\n\t\t\tvar i = randInt(0, settings.colors.length);\r\n\t\t\taddNewBlock(this.hex,i, settings.colors[ri], 0.6 + (this.difficulty / 15) * 3);\r\n\t\t\taddNewBlock(this.hex,(i + 3) % this.hex.sides, settings.colors[ri], 0.6 + (this.difficulty / 15) * 3);\r\n\t\t\tthis.ct += 1.5;\r\n\t\t\tthis.lastGen = this.dt;\r\n\t\t\tthis.shouldChangePattern();\r\n\t\t}\r\n\t};\r\n\r\n\tspiralGeneration() {\r\n\t\tvar dir = randInt(0, 2);\r\n\t\tif (this.dt - this.lastGen > this.nextGen * (2 / 3)) {\r\n\t\t\tif (dir) {\r\n\t\t\t\taddNewBlock(this.hex,5 - (this.ct % this.hex.sides), settings.colors[randInt(0, settings.colors.length)], 1.5 + (this.difficulty / 15) * (3 / 2));\r\n\t\t\t} else {\r\n\t\t\t\taddNewBlock(this.hex,this.ct % this.hex.sides, settings.colors[randInt(0, settings.colors.length)], 1.5 + (this.difficulty / 15) * (3 / 2));\r\n\t\t\t}\r\n\t\t\tthis.ct += 1;\r\n\t\t\tthis.lastGen = this.dt;\r\n\t\t\tthis.shouldChangePattern();\r\n\t\t}\r\n\t};\r\n\r\n\tdoubleGeneration() {\r\n\t\tif (this.dt - this.lastGen > this.nextGen) {\r\n\t\t\tvar i = randInt(0, \tsettings.colors.length);\r\n\t\t\taddNewBlock(this.hex,i, settings.colors[randInt(0, settings.colors.length)], 1.5 + (this.difficulty / 15) * 3);\r\n\t\t\taddNewBlock(this.hex,(i + 1) % this.hex.sides, settings.colors[randInt(0, settings.colors.length)], 1.5 + (this.difficulty / 15) * 3);\r\n\t\t\tthis.ct += 2;\r\n\t\t\tthis.lastGen = this.dt;\r\n\t\t\tthis.shouldChangePattern();\r\n\t\t}\r\n\t};\r\n\r\n\tsetRandom(){\r\n\t\tthis.ct = 0;\r\n\t\tthis.currentFunction = this.randomGeneration;\r\n\t};\r\n\r\n\tshouldChangePattern(x) {\r\n\t\tif (x) {\r\n\t\t\tvar q = randInt(0, 4);\r\n\t\t\tthis.ct = 0;\r\n\t\t\tswitch (q) {\r\n\t\t\t\tcase 0:\r\n\t\t\t\t\tthis.currentFunction = this.doubleGeneration;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.currentFunction = this.spiralGeneration;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tthis.currentFunction = this.crosswiseGeneration;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} else if (this.ct > 8) {\r\n\t\t\tif (randInt(0, 2) === 0) {\r\n\t\t\t\tthis.setRandom();\r\n\t\t\t\treturn 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\t};\r\n\tblockDestroyed() {\r\n\t\tif (this.nextGen > 1350) {\r\n\t\t\tthis.nextGen -= 30 * settings.creationSpeedModifier;\r\n\t\t} else if (this.nextGen > 600) {\r\n\t\t\tthis.nextGen -= 8 * settings.creationSpeedModifier;\r\n\t\t} else {\r\n\t\t\tthis.nextGen = 600;\r\n\t\t}\r\n\t\r\n\t\tif (this.difficulty < 35) {\r\n\t\t\tthis.difficulty += 0.085 * settings.speedModifier;\r\n\t\t} else {\r\n\t\t\tthis.difficulty = 35;\r\n\t\t}\r\n\t}\r\n\r\n\t// rest of generation functions\r\n\r\n\tcurrentFunction = this.randomGeneration;\r\n}\r\n\r\nfunction addNewBlock(MainHex,blocklane, color, iter, distFromHex, settled) { //last two are optional parameters\r\n    //console.log(\"addNewBlock\",MainHex,blocklane,color,iter,distFromHex,settled);\r\n\t// 调整块的速度，乘以速度修正系数\r\n    iter *= settings.speedModifier;\r\n\t//TODO test\r\n\t//color = '#FF0000';\r\n    // 创建一个新的块对象，并将其添加到块数组中\r\n    wx.globalData.blocks.push(new Block(MainHex,blocklane, color, iter, distFromHex, settled));\r\n}\r\nexport default blockGen;"]}