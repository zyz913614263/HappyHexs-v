{"version":3,"sources":["gamelogic.js.input.js"],"names":["consolidateBlocks","initFeedCard","scaleCanvas","shareFeedCard","floodFill","gameOver","checkGameOver","updateFeedCard","gameinit","update","animLoop","setStartScreen","search","handleGameStart","pixelRatio","systemInfo","screenHeight","screenWidth","settings","scale","800","baseScale","blockHeight","baseBlockHeight","hexWidth","baseHexWidth","prevScale","canvas","width","height","style","'px'","wx","globalData","currentPixelRatio","ctx","highScore","getHighScore","console","log","'历史最高分:'","audioManager","initAudioWithDelay","requestAnimationFrame","callback","setTimeout","'init'","score","0","gameState","lastTime","Date","now","mainHex","Hex","blocks","waveone","blockGen","gdx","gdy","comboTime","y","100","startTime","texts","delay","15","1","render","dt","16.666","rush","drawStartScreen","2","drawGameOver","\"default\"","e","x","touches","clientX","rotate","offTouchStart","onTouchStart","handleMainPage","touch","btnX","canvasWidth","btnWidth","btnY","canvasHeight","btnHeight","80","clientY","\"开始游戏\"","start","startScreenInterval","clearInterval","getFeedCardSupport","success","fail","res","'Feed异化卡支持状态:'","feedCard","isSupported","feedCardSupport","getFeedCardFreeHeight","cardHeight","freeHeight","'Feed异化卡可用高度:'","err","error","'获取异化卡高度失败:'","'检查Feed异化卡支持失败:'","\"Feed异化卡不支持\"","cardData","bestScore","feedCardId","cardArgs","title","desc","imageUrl","toString","'快乐六边形'","'feed-card-image.png'","showFeedCard","feedCardData","'展示Feed异化卡成功:'","'展示Feed异化卡失败:'","'分享Feed卡片成功:'","showToast","icon","duration","'分享成功'","'success'","2000","'分享Feed卡片失败:'","'分享失败'","'none'","1000","ct","prevTimeScored","j","block","lowestDeletedIndex","99","i","length","doesBlockCollide","settled","removed","initializing","distFromHex","iter","checked","attachedLane","getIndex","deleted","splice","blockDestroyed","lane","sides","gameOverLength","\"gameOver\"","gameover","saveHighScore","hex","side","index","deleting","deletedBlocks","sidesChanged","push","3","coords","adder","arr","indexOf","lastCombo","comboMultiplier","basecomboTime","10","findCenterOfBlocks","Text","'x'","'y'","\"连击 x\"","\"#FF0000\"","good","6","great","unbleaveable","combotime","60","\"得分 + \"","color","lastColorScored","twoD","oneD","curSide","curIndex","Math","abs","'./libs/weapp-adapter.js'","'./settings.js'","'./entry/Hex.js'","'./entry/wavegen.js'","'./entry/Block.js'","'./entry/music.js'","'./storage/localstorage.js'","'./comon.js'","'./pages/game-over-page.js'","'./pages/game-login-page.js'","'./pages/game-run-page.js'","tt","'game.js 导入的 settings:'","iframHasLoaded","hexColorsToTintedColors","\"#e74c3c\"","\"#f1c40f\"","\"#3498db\"","\"#2ecc71\"","\"rgb(241,163,155)\"","\"rgb(246,223,133)\"","\"rgb(151,201,235)\"","\"rgb(150,227,183)\"","rgbToHex","\"rgb(231,76,60)\"","\"rgb(241,196,15)\"","\"rgb(52,152,219)\"","\"rgb(46,204,113)\"","rgbColorsToTintedColors","hexagonBackgroundColor","'rgb(236, 240, 241)'","hexagonBackgroundColorClear","'rgba(236, 240, 241, 0.5)'","centerBlue","'rgb(44,62,80)'","angularVelocityConst","4","op","scoreOpacity","textOpacity","prevGameState","framerate","scoreAdditionCoeff","prevScore","numHighScores","devMode","lastGen","nextGen","spawnLane","createCanvas","getContext","'2d'","getSystemInfoSync","windowWidth","windowHeight","trueCanvas","btnAnimation","glowSize","time","hexRotation","innerHexRotation","gameLogo","createImage","src","'res/images/logo.png'"],"mappings":"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","file":"gamelogic.js","sourcesContent":["// 初始化游戏\r\nimport './libs/weapp-adapter.js'\r\nimport { settings, colors, randInt, drawPolygon } from './settings.js';\r\nimport Hex from './entry/Hex.js';\r\nimport blockGen from './entry/wavegen.js';\r\nimport {findCenterOfBlocks} from './entry/Block.js';\r\nimport { audioManager } from './entry/music.js';\r\nimport { getHighScore, saveHighScore } from './storage/localstorage.js';\r\nimport {drawRoundRect,renderText,Text} from './comon.js';\r\nimport { drawGameOver } from './pages/game-over-page.js';\r\nimport { drawStartScreen } from './pages/game-login-page.js';\r\nimport { render } from './pages/game-run-page.js';\r\nconst tt = wx\r\nconsole.log('game.js 导入的 settings:', settings,settings.blockHeight);\r\n//初始化\r\nwx.globalData.rush = 1; //游戏速度，越大越快 建议1\r\nwx.globalData.lastTime = 0;\r\nwx.globalData.iframHasLoaded = false\r\nwx.globalData.hexColorsToTintedColors={\r\n\t\"#e74c3c\": \"rgb(241,163,155)\",\r\n\t\"#f1c40f\": \"rgb(246,223,133)\",\r\n\t\"#3498db\": \"rgb(151,201,235)\",\r\n\t\"#2ecc71\": \"rgb(150,227,183)\"\r\n};\r\nwx.globalData.rgbToHex = {\r\n\t\"rgb(231,76,60)\": \"#e74c3c\",\r\n\t\"rgb(241,196,15)\": \"#f1c40f\",\r\n\t\"rgb(52,152,219)\": \"#3498db\",\r\n\t\"rgb(46,204,113)\": \"#2ecc71\"\r\n};\r\nwx.globalData.rgbColorsToTintedColors = {\r\n\t\"rgb(231,76,60)\": \"rgb(241,163,155)\",\r\n\t\"rgb(241,196,15)\": \"rgb(246,223,133)\",\r\n\t\"rgb(52,152,219)\": \"rgb(151,201,235)\",\r\n\t\"rgb(46,204,113)\": \"rgb(150,227,183)\"\r\n};\r\nwx.globalData.hexagonBackgroundColor = 'rgb(236, 240, 241)';\r\nwx.globalData.hexagonBackgroundColorClear = 'rgba(236, 240, 241, 0.5)';\r\nwx.globalData.centerBlue = 'rgb(44,62,80)';\r\nwx.globalData.angularVelocityConst = 4;\r\nwx.globalData.op = 0;\r\n//wx.globalData.saveState = localStorage.getItem(\"saveState\") || \"{}\";\r\nwx.globalData.centerBlue = 'rgb(44,62,80)';\r\nwx.globalData.scoreOpacity = 0;\r\nwx.globalData.textOpacity = 0;\r\nwx.globalData.prevGameState = undefined;\r\nwx.globalData.framerate = 60\r\nwx.globalData.score = 0;\r\nwx.globalData.scoreAdditionCoeff = 1;\r\nwx.globalData.prevScore = 0;\r\nwx.globalData.numHighScores = 3;\r\nwx.globalData.gdx = 0;\r\nwx.globalData.gdy = 0;\r\nwx.globalData.devMode = 0;\r\nwx.globalData.lastGen = undefined;\r\nwx.globalData.prevTimeScored = undefined;\r\nwx.globalData.nextGen = undefined;\r\nwx.globalData.spawnLane = 0;\r\nwx.globalData.startTime = undefined;\r\nwx.globalData.gameState;\r\nwx.globalData.highScore = 0;\r\nwx.globalData.gameState = 0;//0: 未开始, 1: 游戏中, 2: 游戏结束 \r\n// 创建画布\r\nconst canvas = wx.globalData.canvas || wx.createCanvas()\r\nconst ctx = canvas.getContext('2d')\r\nwx.globalData.ctx = ctx;\r\n// 获取系统信息\r\nconst systemInfo = wx.getSystemInfoSync()\r\nconst screenWidth = systemInfo.windowWidth\r\nconst screenHeight = systemInfo.windowHeight\r\nwx.globalData.trueCanvas = {\r\n\twidth: canvas.width,\r\n\theight: canvas.height\r\n};\r\n\r\n/**\r\n * @type {Hex} - 这是一个数字类型的变量\r\n */\r\nwx.globalData.mainHex = null;\r\n/**\r\n * @type {Array<block>} - 这是一个数字类型的变量\r\n */\r\nwx.globalData.blocks = null;\r\n/**\r\n * @type {blockGen} - 这是一个数字类型的变量\r\n */\r\nwx.globalData.waveone = null;\r\n/**\r\n * @type {number} - 这是一个数字类型的变量\r\n */\r\nwx.globalData.lastTime = null;\r\n\r\n// 在全局添加动画状态\r\nif (!wx.globalData.btnAnimation) {\r\n\twx.globalData.btnAnimation = {\r\n\t\tscale: 1,\r\n\t\tglowSize: 0,\r\n\t\ttime: 0,\r\n\t\thexRotation: 0,\r\n\t\tinnerHexRotation: 0\r\n\t};\r\n}\r\n\r\n// 在全局作用域创建并加载logo\r\nwx.globalData.gameLogo = wx.createImage();\r\nwx.globalData.gameLogo.src = 'res/images/logo.png';\r\n\r\nfunction scaleCanvas() {\r\n\t// 获取系统信息\r\n\tconst pixelRatio = systemInfo.pixelRatio;\r\n\t//console.log('scaleCanvas',settings.baseBlockHeight,settings.baseHexWidth,settings.scale);\r\n\t// 计算缩放比例\r\n\tif (screenHeight > screenWidth) {\r\n\t\tsettings.scale = (screenWidth / 800) * settings.baseScale;\r\n\t} else {\r\n\t\tsettings.scale = (screenHeight / 800) * settings.baseScale;\r\n\t}\r\n\tsettings.blockHeight = settings.baseBlockHeight * settings.scale;\r\n\tsettings.hexWidth = settings.baseHexWidth * settings.scale;\r\n\tsettings.prevScale = settings.scale;\r\n\t//console.log('scaleCanvas after',settings.blockHeight,settings.hexWidth,settings.scale);\r\n\t// 设置画布大小\r\n\tcanvas.width = screenWidth * pixelRatio;\r\n\tcanvas.height = screenHeight * pixelRatio;\r\n\r\n\t// 设置样式大小\r\n\tcanvas.style = {\r\n\t\twidth: screenWidth + 'px',\r\n\t\theight: screenHeight + 'px'\r\n\t};\r\n\twx.globalData.currentPixelRatio = pixelRatio\r\n\t// 缩放画布上下文以适应设备像素比\r\n\tctx.scale(pixelRatio, pixelRatio);\r\n}\r\n\r\n//游戏入口函数\r\nfunction gameinit() {\r\n\tconst highScore = getHighScore();\r\n\twx.globalData.highScore = highScore;\r\n    console.log('历史最高分:', highScore);\r\n\t//initUserInfo()\r\n\t//initFeedCard();\r\n\taudioManager.initAudioWithDelay();\r\n\t// 设置全局对象\r\n\tif (!wx.globalData.requestAnimationFrame) {\r\n\t\twx.globalData.requestAnimationFrame = wx.requestAnimationFrame || \r\n\t\t\t(callback => setTimeout(callback, 1000 / 60))\r\n\t}\r\n\tscaleCanvas()\r\n\tconsole.log('init');\r\n\t\r\n\twx.globalData.score = 0;\r\n\twx.globalData.gameState = 0;\r\n\twx.globalData.lastTime = Date.now();\r\n\twx.globalData.mainHex = new Hex(settings.hexWidth);\r\n\twx.globalData.blocks = []\r\n\twx.globalData.waveone = new blockGen(wx.globalData.mainHex);\r\n\twx.globalData.gdx =  0;\r\n\twx.globalData.gdy = 0;\r\n\twx.globalData.comboTime =  0;\r\n\r\n\twx.globalData.mainHex.y = -100;\r\n\r\n\twx.globalData.startTime = Date.now();\r\n\twx.globalData.waveone = new blockGen(wx.globalData.mainHex);\r\n\r\n\twx.globalData.mainHex.texts = []; //clear texts\r\n\twx.globalData.mainHex.delay = 15;\r\n\t//hideText();\r\n\t// 显示开始界面\r\n\tsetStartScreen();\r\n\trequestAnimationFrame(animLoop);\r\n\r\n}\r\n\r\nfunction animLoop() {\r\n\tswitch (wx.globalData.gameState) {\r\n\tcase 1:\r\n\t\trequestAnimationFrame(animLoop);\r\n\t\trender(ctx,canvas);\r\n\t\tvar now = Date.now();\r\n\t\tvar dt = (now - wx.globalData.lastTime)/16.666 * wx.globalData.rush;\r\n\t\tif(!wx.globalData.mainHex.delay) {\r\n\t\t\tupdate(dt);\r\n\t\t}\r\n\t\telse{\r\n\t\t\twx.globalData.mainHex.delay--;\r\n\t\t}\r\n\t\twx.globalData.lastTime = now;\r\n\r\n\t\tcheckGameOver()\r\n\t\tbreak;\r\n\r\n\tcase 0:\r\n\t\trequestAnimationFrame(animLoop);\r\n\t\t\r\n\t\t//render();\r\n\t\tdrawStartScreen(ctx,canvas);\r\n\t\t//drawGameOver(ctx,canvas);\r\n\t\tbreak;\r\n\r\n\tcase -1:\r\n\t\trequestAnimationFrame(animLoop);\r\n\t\trender(ctx,canvas);\r\n\t\tbreak;\r\n\r\n\tcase 2:\r\n\t\trequestAnimationFrame(animLoop);\r\n\t\trender(ctx,canvas);\r\n\t\tdrawGameOver(ctx,canvas);\r\n\t\tbreak;\r\n\t\r\n\tdefault:\r\n\t\tconsole.log(\"default\");\r\n\t\tbreak;\r\n\t}\r\n}\r\n\r\n\r\nfunction handleGameStart(e) {\r\n\t// 触摸事件处理\r\n\tconst touch = e.touches[0];\r\n\tconst x = touch.clientX;\r\n\tswitch(wx.globalData.gameState){\r\n\t\tcase 1:\r\n\t\t\tif (x < screenWidth / 2) {\r\n\t\t\t\tif (wx.globalData.mainHex && wx.globalData.gameState !== 0) {\r\n\t\t\t\t\twx.globalData.mainHex.rotate(1);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (wx.globalData.mainHex && wx.globalData.gameState !== 0) {\r\n\t\t\t\t\twx.globalData.mainHex.rotate(-1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst canvasWidth = canvas.width / wx.globalData.currentPixelRatio;\r\n\t\t\tconst canvasHeight = canvas.height / wx.globalData.currentPixelRatio;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t//wx.globalData.mainHex.texts.push(new Text(canvasWidth/2,canvasHeight/2, \"连击 X\" + wx.globalData.mainHex.position, \"#FF0000\"));\r\n\r\n\t\t\tbreak\r\n\t\tcase 2:\r\n\t\t\twx.offTouchStart(handleGameStart);\r\n\t\t\tgameinit();\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n// 设置开始界面\r\nfunction setStartScreen() {\r\n\tlet isAddToDesktopButtonTouched = false;\r\n    // 添加触摸事件监听\r\n    function handleMainPage(e) {\r\n        const touch = e.touches[0];\r\n        const canvasWidth = canvas.width / wx.globalData.currentPixelRatio;\r\n        const canvasHeight = canvas.height / wx.globalData.currentPixelRatio;\r\n        const btnWidth = 100 * settings.scale;\r\n        const btnHeight = 80 * settings.scale;\r\n        const btnX = (canvasWidth - btnWidth) / 2;\r\n        const btnY = (canvasHeight - btnHeight) / 2;\r\n        \r\n        // 直接使用触摸点坐标\r\n        const x = touch.clientX;\r\n        const y = touch.clientY;\r\n        \r\n        //console.log('触摸位置:', x, y); // 调试信息\r\n        //console.log('按钮区域:', btnX, btnY, btnWidth, btnHeight); // 调试信息\r\n        \r\n        // 检查是否点击了按钮\r\n        if (x >= btnX && x <= btnX + btnWidth &&\r\n            y >= btnY && y <= btnY + btnHeight) {\r\n\t\t\twx.offTouchStart(handleMainPage);\r\n\t\t\t\t// 开始游戏\r\n            wx.globalData.gameState = 1;\r\n\t\t\twx.onTouchStart(handleGameStart);\r\n\t\t\t/*if (wx.globalData.startScreenInterval) {\r\n\t\t\t\tclearInterval(wx.globalData.startScreenInterval);\r\n\t\t\t\twx.globalData.startScreenInterval = null;\r\n\t\t\t}*/\r\n            wx.globalData.lastTime = Date.now();\r\n            console.log(\"开始游戏\");\r\n            \r\n            \r\n\t\t\taudioManager.start();\r\n            \r\n            \r\n            // 清除开始界面的重绘定时器\r\n            if (wx.globalData.startScreenInterval) {\r\n                clearInterval(wx.globalData.startScreenInterval);\r\n                wx.globalData.startScreenInterval = null;\r\n            }\r\n        }\r\n\t\t/*\r\n\t\tconst centerX = canvasWidth / 2;\r\n\t\tconst centerY = canvasHeight / 2;\r\n\t\tconst saveY = centerY + 380 * settings.scale;\r\n\t\tconst saveX = centerX -150*settings.scale;\r\n\t\t// 检查是否点击保存按钮\r\n        if (x >= saveX - btnWidth/2 &&\r\n            x <= saveX + btnWidth/2 &&\r\n            y >= saveY - btnHeight/2 &&\r\n            y <= saveY + btnHeight/2) {\r\n            \r\n            // 调用复访能力\r\n            wx.navigateToScene({\r\n                scene: 'sidebar',\r\n                success: () => {\r\n                    console.log('保存成功');\r\n                },\r\n                fail: (err) => {\r\n                    console.error('保存失败:', err);\r\n                }\r\n            });\r\n            return;\r\n        }*/\r\n\t\t/*// 检查是否点击添加到桌面按钮\r\n        const addToDesktopX = centerX ;\r\n        const addToDesktopY = centerY + 380 * settings.scale;\r\n        if (x >= addToDesktopX - btnWidth/2 &&\r\n            x <= addToDesktopX + btnWidth/2 &&\r\n            y >= addToDesktopY - btnHeight/2 &&\r\n            y <= addToDesktopY + btnHeight/2) {\r\n            \r\n\t\t\tisAddToDesktopButtonTouched = true;\r\n            return;\r\n        }*/\r\n    }\r\n\r\n\tfunction handleTouchEnd(e) {\r\n\t\tconst canvasWidth = canvas.width / wx.globalData.currentPixelRatio;\r\n\t\tconst canvasHeight = canvas.height / wx.globalData.currentPixelRatio;\r\n        if (isAddToDesktopButtonTouched) {\r\n            // 在触摸结束时调用添加到桌面API\r\n            wx.addShortcut({\r\n                success: () => {\r\n                    console.log('添加到桌面成功');\r\n                    wx.showToast({\r\n                        title: '添加到桌面成功',\r\n                        icon: 'success',\r\n                        duration: 2000\r\n                    });\r\n                },\r\n                fail: (err) => {\r\n                    console.error('添加到桌面失败:', err);\r\n                    wx.showToast({\r\n                        title: '添加到桌面失败',\r\n                        icon: 'none',\r\n                        duration: 2000\r\n                    });\r\n                }\r\n            });\r\n            isAddToDesktopButtonTouched = false;\r\n            return;\r\n        }\r\n\t\tconst centerX = canvasWidth / 2;\r\n\t\tconst centerY = canvasHeight / 2;\r\n\t\tif (wx.globalData.gameState === 0) {\r\n\t\t\tconst touch = e.changedTouches[0];\r\n            const shareY = centerY + 380 * settings.scale;\r\n            const shareX = centerX + 150 * settings.scale;\r\n            const btnWidth = 200 * settings.scale;\r\n            const btnHeight = 80 * settings.scale;\r\n\r\n            if (touch.clientX >= shareX - btnWidth/2 &&\r\n                touch.clientX <= shareX + btnWidth/2 &&\r\n                touch.clientY >= shareY - btnHeight/2 &&\r\n                touch.clientY <= shareY + btnHeight/2) {\r\n                shareFeedCard();\r\n                return;\r\n            }\r\n\t\t}\r\n    }\r\n    \r\n    //wx.onTouchEnd(handleTouchEnd);\r\n    // 注册触摸事件\r\n    wx.onTouchStart(handleMainPage);\r\n    \r\n    // 绘制开始界面\r\n    //drawStartScreen();\r\n\t // 添加重绘定时器，确保界面持续显示\r\n\t// wx.globalData.startScreenInterval = setInterval(drawStartScreen, 1000 / 60);\r\n}\r\n// 添加Feed异化卡相关的全局配置\r\nwx.globalData.feedCard = {\r\n    isSupported: false,\r\n    cardHeight: 0,\r\n    score: 0,\r\n    bestScore: 0\r\n};\r\n\r\n// 初始化Feed异化卡能力\r\nfunction initFeedCard() {\r\n    // 检查环境是否支持Feed异化卡\r\n    if (wx.getFeedCardSupport) {\r\n        wx.getFeedCardSupport({\r\n            success(res) {\r\n                console.log('Feed异化卡支持状态:', res);\r\n                wx.globalData.feedCard.isSupported = res.feedCardSupport;\r\n                if (res.feedCardSupport) {\r\n                    // 获取异化卡可用高度\r\n                    wx.getFeedCardFreeHeight({\r\n                        success(res) {\r\n                            wx.globalData.feedCard.cardHeight = res.freeHeight;\r\n                            console.log('Feed异化卡可用高度:', res.freeHeight);\r\n                        },\r\n                        fail(err) {\r\n                            console.error('获取异化卡高度失败:', err);\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            fail(err) {\r\n                console.error('检查Feed异化卡支持失败:', err);\r\n            }\r\n        });\r\n    }else{\r\n\t\tconsole.log(\"Feed异化卡不支持\");\r\n\t}\r\n}\r\n\r\n// 更新Feed异化卡内容\r\nfunction updateFeedCard(score) {\r\n    if (!wx.globalData.feedCard.isSupported) return;\r\n\r\n    // 更新最高分\r\n    if (score > wx.globalData.feedCard.bestScore) {\r\n        wx.globalData.feedCard.bestScore = score;\r\n    }\r\n\r\n    // 准备Feed卡片数据\r\n    const cardData = {\r\n        feedCardId: 1, // 卡片ID，需要在开发者平台配置\r\n        cardArgs: {\r\n            score: score.toString(),\r\n            bestScore: wx.globalData.feedCard.bestScore.toString(),\r\n            title: '快乐六边形',\r\n            desc: `我在快乐六边形中获得了${score}分！`,\r\n            imageUrl: 'feed-card-image.png' // 替换为你的图片地址\r\n        }\r\n    };\r\n\r\n    // 展示Feed异化卡\r\n    wx.showFeedCard({\r\n        feedCardData: cardData,\r\n        success(res) {\r\n            console.log('展示Feed异化卡成功:', res);\r\n        },\r\n        fail(err) {\r\n            console.error('展示Feed异化卡失败:', err);\r\n        }\r\n    });\r\n}\r\n\r\n// 添加分享卡片功能\r\nfunction shareFeedCard() {\r\n    if (!wx.globalData.feedCard.isSupported) return;\r\n\r\n    wx.shareFeedCard({\r\n        feedCardId: 1, // 与showFeedCard中使用的ID保持一致\r\n        cardArgs: {\r\n            score: wx.globalData.score.toString(),\r\n            bestScore: wx.globalData.feedCard.bestScore.toString(),\r\n            title: '快乐六边形',\r\n            desc: `我在快乐六边形中获得了${wx.globalData.score}分！快来挑战我吧！`,\r\n            imageUrl: 'feed-card-image.png'\r\n        },\r\n        success(res) {\r\n            console.log('分享Feed卡片成功:', res);\r\n            wx.showToast({\r\n                title: '分享成功',\r\n                icon: 'success',\r\n                duration: 2000\r\n            });\r\n        },\r\n        fail(err) {\r\n            console.error('分享Feed卡片失败:', err);\r\n            wx.showToast({\r\n                title: '分享失败',\r\n                icon: 'none',\r\n                duration: 2000\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n\r\n//更新游戏\r\nfunction update(dt) {\r\n\t// 更新主六边形的时间增量\r\n\twx.globalData.mainHex.dt = dt;\r\n\t\r\n\t// 更新波生成器\r\n\twx.globalData.waveone.update();\r\n\t// 检查是否需要更新得分时间\r\n\tif (wx.globalData.mainHex.ct - wx.globalData.waveone.prevTimeScored > 1000) {\r\n\t\twx.globalData.waveone.prevTimeScored = wx.globalData.mainHex.ct;\r\n\t}\r\n\t\r\n\t// 用于跟踪最低的被删除方块的索引\r\n\tvar lowestDeletedIndex = 99;\r\n\tvar i;\r\n\tvar j;\r\n\tvar block;\r\n\r\n\t// 遍历所有活动方块\r\n\tfor (i = 0; i < wx.globalData.blocks.length; i++) {\r\n\t\t// 检查方块是否与主六边形碰撞\r\n\t\twx.globalData.mainHex.doesBlockCollide(wx.globalData.blocks[i]);\r\n\t\tif (!wx.globalData.blocks[i].settled) {\r\n\t\t\t// 如果方块未固定，且不在初始化状态，则更新其位置\r\n\t\t\tif (!wx.globalData.blocks[i].initializing) \r\n\t\t\t\twx.globalData.blocks[i].distFromHex -= wx.globalData.blocks[i].iter * dt * settings.scale;\r\n\t\t} else if (!wx.globalData.blocks[i].removed) {\r\n\t\t\t// 如果方块已固定但未被移除，标记为已移除\r\n\t\t\twx.globalData.blocks[i].removed = 1;\r\n\t\t}\r\n\t}\r\n\r\n\t// 检查主六边形上所有边的方块\r\n\tfor (i = 0; i < wx.globalData.mainHex.blocks.length; i++) {\r\n\t\tfor (j = 0; j < wx.globalData.mainHex.blocks[i].length; j++) {\r\n\t\t\t// 如果方块被标记为需要检查，则进行合并检查\r\n\t\t\tif (wx.globalData.mainHex.blocks[i][j].checked == 1) {\r\n\t\t\t\tconsolidateBlocks(wx.globalData.mainHex, wx.globalData.mainHex.blocks[i][j].attachedLane, wx.globalData.mainHex.blocks[i][j].getIndex());\r\n\t\t\t\twx.globalData.mainHex.blocks[i][j].checked = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 处理需要删除的方块\r\n\tfor (i = 0; i < wx.globalData.mainHex.blocks.length; i++) {\r\n\t\tlowestDeletedIndex = 99;\r\n\t\tfor (j = 0; j < wx.globalData.mainHex.blocks[i].length; j++) {\r\n\t\t\tblock = wx.globalData.mainHex.blocks[i][j];\r\n\t\t\t// 如果方块标记为删除状态2，则移除它\r\n\t\t\tif (block.deleted == 2) {\r\n\t\t\t\twx.globalData.mainHex.blocks[i].splice(j, 1);\r\n\t\t\t\twx.globalData.waveone.blockDestroyed();\r\n\t\t\t\tif (j < lowestDeletedIndex) lowestDeletedIndex = j;\r\n\t\t\t\tj--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 如果有方块被删除，重置该列上方方块的状态\r\n\t\tif (lowestDeletedIndex < wx.globalData.mainHex.blocks[i].length) {\r\n\t\t\tfor (j = lowestDeletedIndex; j < wx.globalData.mainHex.blocks[i].length; j++) {\r\n\t\t\t\twx.globalData.mainHex.blocks[i][j].settled = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 更新主六边形上所有方块的位置\r\n\tfor (i = 0; i < wx.globalData.mainHex.blocks.length; i++) {\r\n\t\tfor (j = 0; j < wx.globalData.mainHex.blocks[i].length; j++) {\r\n\t\t\tblock = wx.globalData.mainHex.blocks[i][j];\r\n\t\t\t// 检查碰撞\r\n\t\t\twx.globalData.mainHex.doesBlockCollide(block, j, wx.globalData.mainHex.blocks[i]);\r\n\r\n\t\t\t// 如果方块未固定，更新其位置\r\n\t\t\tif (!wx.globalData.mainHex.blocks[i][j].settled) {\r\n\t\t\t\twx.globalData.mainHex.blocks[i][j].distFromHex -= block.iter * dt * settings.scale;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 清理已移除的方块\r\n\tfor(i = 0; i < wx.globalData.blocks.length; i++){\r\n\t\tif (wx.globalData.blocks[i].removed == 1) {\r\n\t\t\twx.globalData.blocks.splice(i, 1);\r\n\t\t\ti--;\r\n\t\t}\r\n\t}\r\n\r\n\t// 更新主六边形的计时器\r\n\twx.globalData.mainHex.ct += dt;\r\n}\r\n\r\n\r\n\r\n// 检查游戏是否结束\r\nfunction checkGameOver() {\r\n\t// 检查每条边上的方块数量\r\n\tfor (let lane = 0; lane < wx.globalData.mainHex.sides; lane++) {\r\n\t\t\tif (wx.globalData.mainHex.blocks[lane].length > settings.gameOverLength) {\r\n\t\t\tconsole.log(\"gameOver\");\r\n\t\t\t// 游戏结束\r\n\t\t\tgameOver();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t\r\n\t// 移除错误的分数检查，确保游戏不会在特定分数时结束\r\n\t// 游戏应该只在堆叠超过5个方块时结束\r\n}\r\n\r\n// 游戏结束处理\r\nfunction gameOver() {\r\n\t// 设置游戏状态为结束\r\n\twx.globalData.gameState = 2;\r\n\t// 绘制游戏结束界面\r\n\t//wx.offTouchStart(handleGameStart);\r\n\taudioManager.gameover();\r\n\tif (wx.globalData.score > wx.globalData.highScore) {\r\n\t\twx.globalData.highScore = wx.globalData.score;\r\n\t\tsaveHighScore(wx.globalData.score);\r\n\t}\r\n}\r\n\r\n//碰撞检测\r\n/**\r\n * @param {Hex} hex - 第一个参数是数字类型\r\n */\r\nfunction consolidateBlocks(hex, side, index) {\r\n    // 记录哪些边被改变\r\n    var sidesChanged = [];\r\n    var deleting = [];\r\n\t/**\r\n\t * @type {Array<Block>}\r\n\t */\r\n    var deletedBlocks = [];\r\n    // 添加初始情况\r\n    deleting.push([side, index]);\r\n    // 填充删除数组\r\n    floodFill(hex, side, index, deleting);\r\n    // 确保有超过3个块需要删除\r\n    if (deleting.length < 3) {\r\n        return;\r\n    }\r\n    var i;\r\n    for (i = 0; i < deleting.length; i++) {\r\n        var arr = deleting[i];\r\n        // 确保数组是正确的\r\n        if (arr !== undefined && arr.length == 2) {\r\n            // 如果不在已改变的边数组中，则添加\r\n            if (sidesChanged.indexOf(arr[0]) == -1) {\r\n                sidesChanged.push(arr[0]);\r\n            }\r\n            // 标记为已删除\r\n            hex.blocks[arr[0]][arr[1]].deleted = 1;\r\n            deletedBlocks.push(hex.blocks[arr[0]][arr[1]]);\r\n        }\r\n    }\r\n\r\n    // 添加分数\r\n    var now = wx.globalData.mainHex.ct;\r\n    if (now - hex.lastCombo < settings.comboTime) {\r\n        //settings.comboTime = (1 / settings.creationSpeedModifier) * (wx.globalData.waveone.nextGen / 16.666667) * 3;\r\n        hex.comboMultiplier += 1;\r\n\t\tsettings.comboTime = settings.basecomboTime*(1-hex.comboMultiplier/10);\r\n        var coords = findCenterOfBlocks(deletedBlocks);\r\n        hex.texts.push(new Text(coords['x'], coords['y'], \"连击 x\" + hex.comboMultiplier.toString(), \"#FF0000\"));\r\n\t\tif(hex.comboMultiplier < 3){\r\n\t\t\taudioManager.good();\r\n\t\t}\r\n\t\telse if(hex.comboMultiplier < 6){\r\n\t\t\taudioManager.great();\r\n\t\t}\r\n\t\telse{\r\n\t\t\taudioManager.unbleaveable();\r\n\t\t}\r\n\t\t\r\n\t} else {\r\n        settings.comboTime = settings.basecomboTime;\r\n        hex.comboMultiplier = 1;\r\n\t\taudioManager.good();\r\n    }\r\n\thex.lastCombo = now;\r\n\taudioManager.combotime(settings.comboTime/60/wx.globalData.rush);\r\n    var adder = deleting.length * deleting.length * hex.comboMultiplier;\r\n    hex.texts.push(new Text(hex.x, hex.y, \"得分 + \" + adder.toString(), deletedBlocks[0].color));\r\n    hex.lastColorScored = deletedBlocks[0].color;\r\n    wx.globalData.score += adder;\t\r\n}\r\nfunction search(twoD,oneD){\r\n\t// Searches a two dimensional array to see if it contains a one dimensional array. indexOf doesn't work in this case\r\n\tfor(var i=0;i<twoD.length;i++){\r\n\t\tif(twoD[i][0] == oneD[0] && twoD[i][1] == oneD[1]) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n/**\r\n * @param {Hex} hex \r\n * @param {Number} side \r\n * @param {Number} index \r\n * @param {Array} deleting \r\n * @returns \r\n */\r\nfunction floodFill(hex, side, index, deleting) {\r\n    // 如果指定的边或索引不存在，直接返回\r\n    if (hex.blocks[side] === undefined || hex.blocks[side][index] === undefined) return;\r\n\r\n    // 存储当前块的颜色\r\n    var color = hex.blocks[side][index].color;\r\n    // 嵌套的for循环用于遍历相邻的块\r\n    for (var x = -1; x < 2; x++) {\r\n        for (var y = -1; y < 2; y++) {\r\n            // 确保不是对角线方向\r\n            if (Math.abs(x) == Math.abs(y)) { continue; }\r\n            // 计算当前探索的边，使用模运算\r\n            var curSide = (side + x + hex.sides) % hex.sides;\r\n            // 计算当前索引\r\n            var curIndex = index + y;\r\n            // 确保当前边和索引存在\r\n            if (hex.blocks[curSide] === undefined) { continue; }\r\n            if (hex.blocks[curSide][curIndex] !== undefined) {\r\n                // 检查颜色是否相同，是否已经被探索过，以及是否未被删除\r\n                if (hex.blocks[curSide][curIndex].color == color && search(deleting, [curSide, curIndex]) === false && hex.blocks[curSide][curIndex].deleted === 0) {\r\n                    // 将当前块添加到已探索数组中\r\n                    deleting.push([curSide, curIndex]);\r\n                    // 递归调用，探索下一个块\r\n                    floodFill(hex, curSide, curIndex, deleting);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport {gameinit}"]}